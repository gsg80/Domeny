urlRegulamin <- vector(mode="character", length=lmax)
textG <- vector(mode="character", length=lmax)
textN <- vector(mode="character", length=lmax)
textK <- vector(mode="character", length=lmax)
textE <- vector(mode="character", length=lmax)
textP <- vector(mode="character", length=lmax)
textU <- vector(mode="character", length=lmax)
textTitle <- vector(mode="character", length=lmax)
textFB <- vector(mode="character", length=lmax)
textInsta <- vector(mode="character", length=lmax)
textLinked <- vector(mode="character", length=lmax)
textAllegro <- vector(mode="character", length=lmax)
textOtomoto <- vector(mode="character", length=lmax)
textGooglePlus <- vector(mode="character", length=lmax)
textYoutube <- vector(mode="character", length=lmax)
tel <- vector(mode="numeric", length=lmax)
eniro <- vector(mode="numeric", length=lmax)
csgroup <- vector(mode="numeric", length=lmax)
fachowcy <- vector(mode="numeric", length=lmax)
nip <-vector(mode="numeric", length=lmax)
krs <-vector(mode="numeric", length=lmax)
mail <-vector(mode="numeric", length=lmax)
pna <-vector(mode="numeric", length=lmax)
ulica <-vector(mode="numeric", length=lmax)
wersja <-vector(mode="numeric", length=lmax)
sunrise <-vector(mode="numeric", length=lmax)
rzetelna <- vector(mode="numeric", length=lmax)
koszyk <- vector(mode="numeric", length=lmax)
dataCrawling <- vector(mode="numeric", length=lmax)
fkoszyk <- c('Koszyk','Basket','koszyk','basket','sklep internetowy','Sklep internetowy','internetowy sklep','księgarnia internetowa','ksiêgarnia internetowa','Ksiêgarnia internetowa')
fniekoszyk <- c('Koszykówka','koszykówka','koszykowej','Koszykowej','Basketball','basketball')
for(i in 1 : lmax)
{
#print(paste(i, "start"))
m <- 0
mN <- 0
mK <- 0
mE <- 0
mP <- 0
mU <- 0
opcja <- 0
dane <- ""
danem <- ""
danemain <- ""
daneTitle <- ""
danep <- ""
html <- ""
links <- ""
links_v2 <- ""
dkoszyk <- c(0,0,0,0,0,0,0,0)
dmkoszyk <- c(0,0,0,0,0,0,0,0)
soclinks <- ""
url <- paste ("http://", danecsv[i,"domena"], sep="")
print(paste(i, url))
if(checkURL(url)){
#print(paste(i, "url OK"))
urlWorks[i] <- 1
try(links <- getLinks(url), silent=T)
if(danecsv[i, "czy_linki"] == 0){
allLinks <- c(allLinks, substring(links, 1, 255))
}
kontakt <-links[grep(pattern = "(K|k|C|c)onta(k|c)t", links)]
kontakt <- kontakt[grep(pattern = "mailto", kontakt, invert=TRUE)]
kontakt <- kontakt[grep(pattern = "home.pl", kontakt, invert=TRUE)]
try({html <- getHTML(url)
#print(paste(i, "html"))
daneTitle <- xpathSApply(html, "//head/title", xmlValue)
#print(paste(i, "title"))
danem <- xpathSApply(html, "//meta", xmlGetAttr, 'content')
#print(paste(i, "danetitle"))
danemain <- xpathSApply(html, "//div", xmlValue)
#print(paste(i, "danemain"))
links_v2 <- ""
links_v2 <- xpathSApply(html, "//a", xmlGetAttr, "href")
if(length(danemain) == 0) {
danemain <- xpathSApply(html, "//p", xmlValue)
} else {
if(length(danemain) == 0) {
danemain <- xpathSApply(html, "//body", xmlValue)
}
}
}, silent=T)
#print(paste(i, kontakt[1]))
if(length(kontakt) > 0){
if(checkURL(links[min(grep(pattern = "(K|k|C|c)onta(k|c)t", links))])){
urlKontakt[i] <- links[min(grep(pattern = "(K|k|C|c)onta(k|c)t", links))]
#print(paste(url, "1", sep=" - "))
}
else{
urlKontakt[i] <- paste(url,links[min(grep(pattern = "(K|k|C|c)onta(k|c)t", links))],sep="")
if(!(checkURL(urlKontakt[i]))){
urlKontakt[i] <- paste(url,"/",links[min(grep(pattern = "(K|k|C|c)onta(k|c)t", links))],sep="")
}
#print(paste(url, "2", sep=" - "))
}
} else {
#print("links_v2")
dl <- 0
try(dl <- length(grep(pattern="(K|k|C|c)onta(k|c)t", links_v2)), silent=T)
if(dl > 0){
urlKontakt[i] <- links_v2[[min(grep(pattern="(K|k|C|c)onta(k|c)t",links_v2))]]
} else {
urlKontakt[i] <- url
}
#print(paste(url, "3", sep=" - "))
}
if(checkURL(urlKontakt[i]) == FALSE){
if(substring(urlKontakt[i], 1, 1) == "/"){
urlKontakt[i] = paste(url,urlKontakt[i], sep="")
} else {
urlKontakt[i]= paste(url,"/", urlKontakt[i], sep="")
}
}
print(paste(i, urlKontakt[i]))
html <- ""
try({
html <- getHTML(urlKontakt[i])
dane <- xpathSApply(html, "//div", xmlValue)
if(length(dane) == 0) {
dane <- xpathSApply(html, "//p", xmlValue)
} else {
dane <- c(dane, xpathSApply(html, "//p", xmlValue))
}
if(length(dane) == 0) {
dane <- xpathSApply(html, "//body", xmlValue)
}
#print(html)
}, silent=T)
#print(paste(i, "html+dane ok"))
if(danecsv[i, "czy_telefon"] == 0){
if(length(grep(pattern = "T|tel(\\.|:|[:space:])", dane)) > 0){
danetel <- dane[grep(pattern = "T|tel(\\.|:|[:space:])", dane)]
j <- 1
while(tel[i] == 0 && j <= length(danetel)) {
textG[i] <- try(clearText(danetel[j]), silent=T)
textG[i] <- try(clearKierunkowy(textG[i]), silent=T)
tel[i] <- parsePhone(textG[i])
if(length(grep(pattern = "[0-9]{9}", tel[i])) == 0 || nchar(tel[i]) != 9){
tel[i] <- 0
}
j <- j + 1
}
}
#print(paste(i, "tel 'tel'"))
if(tel[i] == "0") {
if(length(grep(pattern = "\\+48", dane)) > 0){
#print ("tak")
danetel <- dane[grep(pattern = "\\+48", dane)]
j <- 1
while(tel[i] == "0" && j <= length(danetel)) {
textG[i] <- try(clearText(danetel[j]), silent=T)
#text[i] <- try(clearKierunkowy(text[i]), silent=T)
tel[i] <- parsePhone(textG[i])
if(length(grep(pattern = "[0-9]{9}", tel[i])) == 0 || nchar(tel[i]) != 9){
tel[i] <- 0
}
j <- j + 1
}
}
}
#print(paste(i, "tel '+48'"))
if(tel[i] == "0") {
if(length(grep(pattern = "Z|zadzwoń", dane)) > 0){
#print ("tak")
danetel <- dane[grep(pattern = "Z|zadzwoń", dane)]
j <- 1
while(tel[i] == "0" && j <= length(danetel)) {
textG[i] <- try(clearText(danetel[j]), silent=T)
#text[i] <- try(clearKierunkowy(text[i]), silent=T)
tel[i] <- parsePhone(textG[i])
if(length(grep(pattern = "[0-9]{9}", tel[i])) == 0 || nchar(tel[i]) != 9){
tel[i] <- "0"
}
j <- j + 1
}
}
}
#print(paste(i, "tel 'zadzwoń'"))
if(tel[i] == "0") {
tel[i] <- parsePhoneAttribute(html)
if(length(grep(pattern = "[0-9]{9}", tel[i])) == 0 || nchar(tel[i]) != 9){
tel[i] <- "0"
}
}
#print(paste(i, "tel 'attribute'"))
#tel GSM
if(tel[i] == "0") {
imin <- 0
if(length(grep(pattern = "[0-9]{3}[ |-][0-9]{3}[ |-][0-9]{3}", dane)) > 0){
imin <- max(grep(pattern = "[0-9]{3}[ |-][0-9]{3}[ |-][0-9]{3}", dane))
} else {
if(length(grep(pattern = "[0-9]{3}[ |-][0-9]{2}[ |-][0-9]{2}[ |-][0-9]{2}", dane)) > 0){
imin <- max(grep(pattern = "[0-9]{3}[ |-][0-9]{2}[ |-][0-9]{2}[ |-][0-9]{2}", dane))
}
}
if(imin > 0){
tel[i] <- parsePhoneGSM(dane[imin])
}
if(length(grep(pattern = "[0-9]{9}", tel[i])) == 0 || nchar(tel[i]) != 9){
tel[i] <- "0"
}
}
#print(paste(i, "tel 'GSM'"))
#Stacjonarny
if(tel[i] == "0") {
imin <- 0
if(length(grep(pattern = "[0-9]{2}[ |)][0-9]{7}", dane)) > 0){
imin <- max(grep(pattern = "[0-9]{2}[ |)][0-9]{7}", dane))
} else {
if(length(grep(pattern = "[0-9]{2}[ |)][0-9]{3}[ |-][0-9]{2}[ |-][0-9]{2}", dane)) > 0){
imin <- max(grep(pattern = "[0-9]{2}[ |)][0-9]{3}[ |-][0-9]{2}[ |-][0-9]{2}", dane))
} else {
if(length(grep(pattern = "[0-9]{2}[ |)][0-9][ |-][0-9]{2}[ |-][0-9]{2}[ |-][0-9]{2}", dane)) > 0){
imin <- max(grep(pattern = "[0-9]{2}[ |)][0-9][ |-][0-9]{2}[ |-][0-9]{2}[ |-][0-9]{2}", dane))
}
}
}
if(imin > 0) {
tel[i] <- parsePhoneStationary(dane[imin])
}
if(length(grep(pattern = "[0-9]{9}", tel[i])) == 0 || nchar(tel[i]) != 9){
tel[i] <- "0"
}
}
#print(paste(i, "tel 'Stationary'"))
# #href tel
if(tel[i]=="0"){
if(length(grep(pattern = "tel:", links_v2)) > 0){
tel[i] <- links_v2[[min(grep(pattern = "tel:", links_v2))]]
#tel[i] <- links_v2[[min(grep(pattern="tel:", xpathSApply(html,"//a", xmlGetAttr, "href")))]]
tel[i] <- substring(tel[i], nchar(tel[i])-8, nchar(tel[i]))
}
if(length(grep(pattern = "[0-9]{9}", tel[i])) == 0 || nchar(tel[i]) != 9){
tel[i] <- "0"
}
#print(paste(i, "tel 'href'"))
}
#print(paste(i, tel[i]))
}
# NIP
if(length(grep(pattern = "(N|n)(I|i)(P|p)", dane)) > 0){
mN <- max(grep(pattern = "(N|n)(I|i)(P|p)", dane))
if(mN > 0) {
textN[i] <- try(clearText(dane[mN], typ="NIP"), silent=T)
if(length(grep(pattern = "NIP", textN[i])) > 0){
nip[i] <- substring(textN[i], regexpr('NIP', textN[i])+3, regexpr('NIP', textN[i])+12)
} else {
if(length(grep(pattern = "nip", textN[i])) > 0){
nip[i] <- substring(textN[i], regexpr('nip', textN[i])+3, regexpr('nip', textN[i])+12)
}
}
}
}
#print(paste(i, "NIP"))
if(length(grep(pattern = "[0-9]{10}", nip[i])) == 0 || nchar(nip[i]) != 10){
nip[i] <- 0
}
# KRS
if(length(grep(pattern = "(K|k)(R|r)(S|s)", dane)) > 0){
mK <- max(grep(pattern = "(K|k)(R|r)(S|s)", dane))
if(mK > 0) {
textK[i] <- try(clearText(dane[mK], typ="NIP"), silent=T)
if(length(grep(pattern = "KRS", textK[i])) > 0){
krs[i] <- substring(textK[i], regexpr('KRS', textK[i])+3, regexpr('KRS', textK[i])+12)
} else {
if(length(grep(pattern = "krs", textK[i])) > 0){
krs[i] <- substring(textK[i], regexpr('krs', textK[i])+3, regexpr('krs', textK[i])+12)
}
}
}
}
#print(paste(i, "KRS"))
if(length(grep(pattern = "[0-9]{10}", krs[i])) == 0 || nchar(krs[i]) != 10){
krs[i] <- 0
}
if(nip[i] == "0") {
regulamin <-links[grep(pattern = "(R|r)egulamin", links)]
if(length(regulamin) == 0){
regulamin <-links[grep(pattern = "(C|c)onditions", links)]
}
if(length(regulamin) == 0){
regulamin <-links[grep(pattern = "(O|o)firmie", links)]
}
if(length(regulamin) > 0){
if(checkURL(regulamin)){
urlRegulamin[i] <- regulamin
} else {
urlRegulamin[i] <- paste(url,regulamin,sep="")
if(!(checkURL(urlRegulamin[i]))){
urlRegulamin[i] <- paste(url,"/",regulamin,sep="")
}
}
}
daneR <- ""
try({
htmlR <- getHTML(urlRegulamin[i])
daneR <- xpathSApply(htmlR, "//div", xmlValue)
}, silent=T)
if(length(grep(pattern = "(N|n)(I|i)(P|p)", daneR)) > 0){
mN <- max(grep(pattern = "(N|n)(I|i)(P|p)", daneR))
if(mN > 0) {
textN[i] <- try(clearText(daneR[mN], typ="NIP"), silent=T)
if(length(grep(pattern = "NIP", textN[i])) > 0){
nip[i] <- substring(textN[i], regexpr('NIP', textN[i])+3, regexpr('NIP', textN[i])+12)
} else {
if(length(grep(pattern = "nip", textN[i])) > 0){
nip[i] <- substring(textN[i], regexpr('nip', textN[i])+3, regexpr('nip', textN[i])+12)
}
}
}
}
}
#E-MAIL
if(danecsv[i, "czy_mail"] == 0){
if(length(grep(pattern = "(E|e)?-?(M|m)(A|a)(I|i)(L|l)", dane)) > 0){
mE <- max(grep(pattern = "(E|e)?-?(M|m)(A|a)(I|i)(L|l)", dane))
if(mE > 0) {
textE[i] <- try(clearText(dane[mE], typ="MAIL"), silent=T)
mail[i] <- substring(parseMail(textE[i]), 1, 256)
}
}
#print(paste(i, "MAIL"))
}
#PNA
if(length(grep(pattern = "[0-9][0-9]-[0-9][0-9][0-9]", dane)) > 0){
mP <- max(grep(pattern = "[0-9][0-9]-[0-9][0-9][0-9]", dane))
if(mP > 0) {
textP[i] <- try(dane[mP], silent=T)
pna[i] <- substring(textP[i], regexpr("[0-9][0-9]-[0-9][0-9][0-9]", textP[i]),
regexpr("[0-9][0-9]-[0-9][0-9][0-9]", textP[i])+5)
}
}
#print(paste(i, "PNA"))
#ULICA
if(length(grep(pattern = "ul.", dane)) > 0){
mU<- max(grep(pattern = "ul.", dane))
if(mU > 0){
textU[i] <- try(dane[mU], silent=T)
ulica[i] <- try(substring(textU[i], regexpr("ul.", textU[i], fixed = TRUE)+3, nchar(textU[i])), silent=TRUE)
ulica[i] <- substring(ulica[i], 1, regexpr("[0-9]", ulica[i]) - 1)
if(nchar(ulica[i]) > 50){
ulica[i] <- ""
} else {
ulica[i] <- gsub("\r", "", ulica[i], fixed = TRUE)
ulica[i] <- gsub("\n", "", ulica[i], fixed = TRUE)
ulica[i] <- gsub("\t", "", ulica[i], fixed = TRUE)
if(substring(ulica[i], 1, 1) == " ")
ulica[i] <- substring(ulica[i], 2, nchar(ulica[i]))
if(substring(ulica[i], nchar(ulica[i]), nchar(ulica[i])) == " ")
ulica[i] <- substring(ulica[i], 1, nchar(ulica[i]) - 1)
}
}
}
#WEB BY ENIRO
if(length(grep(pattern = "Website by Eniro Polska", dane)) > 0) {
eniro[i] <- 1
} else {
if(length(grep(pattern = "Stwórz własną stronę www z Panoramą Firm", dane)) > 0){
eniro[i] <- 1
} else {
eniro[i] <- 0
}
}
#REALIZACJA fachowcy.pl
if(length(grep(pattern = "Fachowcy.pl Ventures", dane)) > 0) {
fachowcy[i] <- 1
} else {
fachowcy[i] <- 0
}
#CS GROUP
if(length(grep(pattern = "Zaprojektowane przez csgroup.pl", dane)) > 0) {
csgroup[i] <- 1
} else {
if(length(grep(pattern = "Zaprojektowane przez pkt.pl", dane)) > 0){
csgroup[i] <- 1
} else {
if(length(grep(pattern = "Zaprojektowane przez clearsense.pl", dane)) > 0){
csgroup[i] <- 1
} else {
csgroup[i] <- 0
}
}
}
#SUNRISE
if(length(grep(pattern = "Za pozycjonowanie tego serwisu odpowiada Sunrise System", dane)) > 0) {
sunrise[i] <- 1
} else {
sunrise[i] <- 0
}
#RZETELNA FIRMA
if(length(grep(pattern = "wizytowka.rzetelnafirma.pl", dane)) > 0) {
rzetelna[i] <- 1
} else {
rzetelna[i] <- 0
}
#KOSZYK
dkoszyk <- c(0,0,0,0,0,0,0,0)
dmkoszyk <- c(0,0,0,0,0,0,0,0)
for(ik in 1:length(fkoszyk)){
dkoszyk[ik] <- length(grep(pattern = fkoszyk[ik], danemain))
dmkoszyk[ik] <- length(grep(pattern = fkoszyk[ik], danem))
}
#print(max(dkoszyk))
#print(max(dmkoszyk))
if(max(dkoszyk) > 0) {
koszyk[i] <- 1
} else {
if(max(dmkoszyk) > 0) {
koszyk[i] <- 1
} else {
if(length(grep(pattern = "koszyk", danemain)) > 0) {
koszyk[i] <- 1
} else {
koszyk[i] <- 0
}
}
}
if(koszyk[i] > 0){
dkniekoszyk <- c(0,0,0,0,0,0)
dmniekoszyk <- c(0,0,0,0,0,0)
for(ik in 1:length(fniekoszyk)){
dkniekoszyk[ik] <- length(grep(pattern = fniekoszyk[ik], danemain))
dmniekoszyk[ik] <- length(grep(pattern = fniekoszyk[ik], danem))
}
if(max(dkniekoszyk) + max(dmniekoszyk) > 0){
koszyk[i] <- 0
}
}
# PAGE TITLE
if(length(daneTitle) == 0) {
daneTitle <- ""
}
daneTitle[1] <- gsub("\r?\n|\r", " ", daneTitle[1])
try(textTitle[i] <- substring(daneTitle[1], 1, 255), silent = TRUE)
textTitle[i] <- gsub("\t", "", textTitle[i])
textTitle[i] <- gsub("\n", "", textTitle[i])
textTitle[i] <- gsub("\r", "", textTitle[i])
textTitle[i] <- gsub('"', '', textTitle[i])
#SOCIAL MEDIA / e-Commerce Accounts
soclinks <- getSocialMediaLinks(links_v2)
textFB[i] <- substring(soclinks[1], 1, 255)
textInsta[i] <- substring(soclinks[2], 1, 255)
textLinked[i] <- substring(soclinks[3], 1, 255)
textAllegro[i] <- substring(soclinks[4], 1, 255)
textOtomoto[i] <- substring(soclinks[5], 1, 255)
textGooglePlus[i]<- substring(soclinks[6], 1, 255)
textYoutube[i]<- substring(soclinks[7], 1, 255)
# FACEBOOK
#  		    if(length(facebook) == 0) {
#  		      facebook <- ""
#  		    }
#          textFB[i] <- substring(facebook[1], 1, 255)
#		}
}
if(length(grep(pattern = "[0-9]{9}", tel[i])) == 0 || nchar(tel[i]) != 9){
tel[i] <- 0
}
if(length(grep(pattern = "[0-9]{10}", nip[i])) == 0 || nchar(nip[i]) != 10){
nip[i] <- 0
}
if(length(grep(pattern = "@", mail[i])) == 0){
if(length(grep(pattern = "@", links)) > 0){
mail[i] <- links[min(grep(pattern = "@", links))]
} else {
mail[i] <- ""
}
}
if(length(grep(pattern = "<script", mail[i])) > 0){
mail[i] <- ""
}
mail[i] <- gsub('\"','', mail[i], fixed = TRUE)
mail[i] <- gsub(',','', mail[i], fixed = TRUE)
mail[i] <- gsub("\t", "", mail[i])
mail[i] <- gsub("[\r\n]", "", mail[i])
mail[i] <- gsub('"', '', mail[i])
wersja[i] <- ver
#Data
dataCrawling[i] <- as.character(Sys.Date())
if(i %% 50 == 0) {
tabelaOut <- data.frame(id_domena = head(danecsv["id_domena"], lmax)
, domena = head(danecsv["domena"], lmax)
, czy_dziala = urlWorks
, telefon = tel
, nip = nip
, krs = krs
, webEniro = eniro
, webFachowcy = fachowcy
, webCSGroup = csgroup
, PNA = pna
, version = wersja
, sunrise = sunrise
, rzetelna = rzetelna
, koszyk = koszyk
, data = dataCrawling
, facebook = textFB
, instagram = textInsta
, linkedin = textLinked
, allegro = textAllegro
, otomoto = textOtomoto
, googleplus = textGooglePlus
, youtube = textYoutube
, title = textTitle
, mail = mail
, ulica = ulica
)
write.csv(tabelaOut, "domeny_out.csv", fileEncoding = "UTF-8")
lnks <- unique (grep(links2match, allLinks, value=TRUE))
linksOut <- data.frame(url2 <- lnks)
write.csv(linksOut, "linki.csv", fileEncoding = "UTF-8")
}
print(paste(i, "koniec"))
}
